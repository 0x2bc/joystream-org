// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RolesPage page renders correctly 1`] = `
<BaseLayout>
  <SiteMetadata
    description="roles.siteMetadata.description"
    image="test-file-stub"
    lang="en"
    meta={Array []}
    title="siteMetadata.title"
  />
  <Hero
    animationEnd={500}
    animationEndValue={-40}
    animationStartValue={0}
    chip={null}
    image="icon-mock"
    indent={false}
    noOverflow={false}
    reverse={false}
    theme="black"
    title="roles.hero.title"
  >
    <p
      className="RolesPage__hero-paragraph"
    >
      roles.hero.text
    </p>
  </Hero>
  <LayoutWrapper
    className=""
    dark={false}
    gradient={true}
  >
    <Sidebar
      currentElement=""
      data={
        Object {
          "active": Array [
            Object {
              "overview": "roles.validator.overview",
              "requirements": Array [
                "roles.validator.requirements.setupAndMaintainInfrastructure",
                "roles.validator.requirements.accessToPerformantInfrastructure",
                "roles.validator.requirements.storeKeys",
                "roles.validator.requirements.stake",
              ],
              "responsibilities": Array [
                "roles.validator.responsibilities.runAndMaintainScreeningNodes",
                "roles.validator.responsibilities.enforceRules",
              ],
              "title": "roles.validator.title",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilities": Array [
                "",
                "",
                "",
              ],
              "title": "",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilities": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilities": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
              ],
              "responsibilities": Array [
                "",
                "",
                "",
                "[object Object]",
              ],
              "title": "",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
              ],
              "responsibilities": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "overview": "",
              "requirements": Array [
                "",
                "",
              ],
              "responsibilities": Array [
                "",
                "",
                "",
                "",
              ],
              "title": "",
            },
          ],
          "upcoming": Array [
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=2a9bd4a3ed",
              "id": "membership-screener",
              "image": "icon-component-mock",
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
                <React.Fragment>
                  Collaborate with 
                  <Link
                    className=""
                    highlighted={false}
                    href="#membership-curator"
                  >
                    Membership Curators
                  </Link>
                   and
                  <Link
                    className=""
                    highlighted={false}
                    href="#builder"
                  >
                     Builders
                  </Link>
                   to improve screening mechanisms by discussing screening techniques, sharing traffic information
                </React.Fragment>,
                "",
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=bd10fbb23f",
              "id": "membership-curator",
              "image": "icon-component-mock",
              "overview": <React.Fragment>
                A membership is an integrated representation of identifying information and associated activities of an actor on the platform. It is possible to create memberships for free through the screeners, described
                 
                <Link
                  className=""
                  highlighted={false}
                  href="#membership-screener"
                >
                   above
                </Link>
                . Since this is invariably an imperfect process, there must be some means by which bad conduct and fake accounts can be disabled or removed. This is the task of the membership curators.
              </React.Fragment>,
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
                "",
                <React.Fragment>
                  Collaborate with 
                  <Link
                    className=""
                    highlighted={false}
                    href="#membership-screener"
                  >
                     Screeners
                  </Link>
                   and
                   
                  <Link
                    className=""
                    highlighted={false}
                    href="#builder"
                  >
                     Builders
                  </Link>
                   to improve tools for identifying such members
                </React.Fragment>,
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=2d978eeb0c",
              "id": "bandwidth-provider",
              "image": "icon-component-mock",
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=766d15796d",
              "id": "discovery-provider",
              "image": "icon-component-mock",
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
                <React.Fragment>
                  Collaborate with 
                  <Link
                    className=""
                    highlighted={false}
                    href="#builder"
                  >
                    Builders
                  </Link>
                   to improve both tools, and user facing experiences, to improve the discovery experience
                </React.Fragment>,
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=4ea03faa7a",
              "id": "live-streaming-provider",
              "image": "icon-component-mock",
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=6868b87276",
              "id": "builder",
              "image": "icon-component-mock",
              "overview": <React.Fragment>
                The platform runtime, tools, infrastructure software and user facing applications are all meant to evolve over time. A diverse set of contributors are required to facilitate this, including
                <br />
                <br />
                <ul
                  className="RoleOverview__dashList"
                >
                  <li>
                    <strong>
                      Developers:
                    </strong>
                     Software developers, Data scientists, DevOps and QA
                  </li>
                  <li>
                    <strong>
                      Designers:
                    </strong>
                     Web, Mobile, UX/UI, Branding and Visual Design
                  </li>
                  <li>
                    <strong>
                      Product Managers:
                    </strong>
                     Digital Product Managers, Product Owners and Analysts
                  </li>
                </ul>
                <br />
                All of these contributors are collectively referred to as Builders. Anyone can contribute in the same mode as any of these possible contributor functions, as all the platform source assets are open source and developed in the open. Being a Builder means that one has some scope of responsibility in ongoing efforts, and that one has some predefined reward scheme associated with this responsibility.
              </React.Fragment>,
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
              ],
              "title": "",
            },
            Object {
              "formAction": "https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=46a98ea4be",
              "id": "communication-moderator",
              "image": "icon-component-mock",
              "overview": "",
              "requirements": Array [
                "",
                "",
                "",
              ],
              "responsibilites": Array [
                "",
                "",
                "",
              ],
              "title": "",
            },
          ],
        }
      }
      onElementChange={[Function]}
    />
    <div
      className="RoleOverview__Wrapper"
    >
      <InView
        as="div"
        initialInView={false}
        key="roles.validator.title"
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=26a32a8d8d"
          id="validator"
          image="icon-component-mock"
          overview="roles.validator.overview"
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "roles.validator.requirements.setupAndMaintainInfrastructure",
              "roles.validator.requirements.accessToPerformantInfrastructure",
              "roles.validator.requirements.storeKeys",
              "roles.validator.requirements.stake",
            ]
          }
          responsibilites={
            Array [
              "roles.validator.responsibilities.runAndMaintainScreeningNodes",
              "roles.validator.responsibilities.enforceRules",
            ]
          }
          title="roles.validator.title"
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/validators"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=51a3da04f8"
          id="council-member"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              "",
              "",
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/council-members"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=7733bde460"
          id="storage-provider"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/storage-lead"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=7733bde460"
          id="storage-lead"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/storage-providers"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=3877efbe93"
          id="content-curator"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              "",
              "",
              <React.Fragment>
                Collaborate with 
                <Link
                  className=""
                  highlighted={false}
                  href="#builder"
                >
                   Builders
                </Link>
                 to improve both tools, and user facing experiences, to improve the integrity of the content directory
              </React.Fragment>,
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/content-curators"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=0ea466b90d"
          id="content-creator"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/content-creators"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=3877efbe93"
          id="content-lead"
          image="icon-component-mock"
          overview=""
          questionLink="mailto:hello@jsgenesis.com"
          requirements={
            Array [
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              "",
              "",
              "",
            ]
          }
          title=""
          tutorialLink="https://github.com/Joystream/helpdesk/tree/master/roles/content-curator-lead"
          type="active"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=2a9bd4a3ed"
          id="membership-screener"
          image="icon-component-mock"
          overview=""
          requirements={
            Array [
              "",
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              <React.Fragment>
                Collaborate with 
                <Link
                  className=""
                  highlighted={false}
                  href="#membership-curator"
                >
                  Membership Curators
                </Link>
                 and
                <Link
                  className=""
                  highlighted={false}
                  href="#builder"
                >
                   Builders
                </Link>
                 to improve screening mechanisms by discussing screening techniques, sharing traffic information
              </React.Fragment>,
              "",
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=bd10fbb23f"
          id="membership-curator"
          image="icon-component-mock"
          overview={
            <React.Fragment>
              A membership is an integrated representation of identifying information and associated activities of an actor on the platform. It is possible to create memberships for free through the screeners, described
               
              <Link
                className=""
                highlighted={false}
                href="#membership-screener"
              >
                 above
              </Link>
              . Since this is invariably an imperfect process, there must be some means by which bad conduct and fake accounts can be disabled or removed. This is the task of the membership curators.
            </React.Fragment>
          }
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              "",
              <React.Fragment>
                Collaborate with 
                <Link
                  className=""
                  highlighted={false}
                  href="#membership-screener"
                >
                   Screeners
                </Link>
                 and
                 
                <Link
                  className=""
                  highlighted={false}
                  href="#builder"
                >
                   Builders
                </Link>
                 to improve tools for identifying such members
              </React.Fragment>,
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=2d978eeb0c"
          id="bandwidth-provider"
          image="icon-component-mock"
          overview=""
          requirements={
            Array [
              "",
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=766d15796d"
          id="discovery-provider"
          image="icon-component-mock"
          overview=""
          requirements={
            Array [
              "",
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              <React.Fragment>
                Collaborate with 
                <Link
                  className=""
                  highlighted={false}
                  href="#builder"
                >
                  Builders
                </Link>
                 to improve both tools, and user facing experiences, to improve the discovery experience
              </React.Fragment>,
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=4ea03faa7a"
          id="live-streaming-provider"
          image="icon-component-mock"
          overview=""
          requirements={
            Array [
              "",
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=6868b87276"
          id="builder"
          image="icon-component-mock"
          overview={
            <React.Fragment>
              The platform runtime, tools, infrastructure software and user facing applications are all meant to evolve over time. A diverse set of contributors are required to facilitate this, including
              <br />
              <br />
              <ul
                className="RoleOverview__dashList"
              >
                <li>
                  <strong>
                    Developers:
                  </strong>
                   Software developers, Data scientists, DevOps and QA
                </li>
                <li>
                  <strong>
                    Designers:
                  </strong>
                   Web, Mobile, UX/UI, Branding and Visual Design
                </li>
                <li>
                  <strong>
                    Product Managers:
                  </strong>
                   Digital Product Managers, Product Owners and Analysts
                </li>
              </ul>
              <br />
              All of these contributors are collectively referred to as Builders. Anyone can contribute in the same mode as any of these possible contributor functions, as all the platform source assets are open source and developed in the open. Being a Builder means that one has some scope of responsibility in ongoing efforts, and that one has some predefined reward scheme associated with this responsibility.
            </React.Fragment>
          }
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
      <InView
        as="div"
        initialInView={false}
        key=""
        onChange={[Function]}
        threshold={0.2}
        triggerOnce={false}
      >
        <RoleOverview
          className=""
          formAction="https://joystream.us11.list-manage.com/subscribe/post?u=932de577aec9616d4516b4e0f&amp;id=46a98ea4be"
          id="communication-moderator"
          image="icon-component-mock"
          overview=""
          requirements={
            Array [
              "",
              "",
              "",
            ]
          }
          responsibilites={
            Array [
              "",
              "",
              "",
            ]
          }
          title=""
          type="upcoming"
        />
      </InView>
    </div>
  </LayoutWrapper>
</BaseLayout>
`;
